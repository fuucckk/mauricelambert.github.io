{
    "title": "Malware Reverse and Triage",
    "keywords": [
        "malware",
        "reverse",
        "presentation",
        "analysis",
        "triage",
        "tools",
        "static",
        "dynamic"
    ],
    "description": "This presentation show new tools about easy malware reverse or malware identification with static steps and dynamic steps.",
    "author": "Maurice Lambert",
    "default icon": "../MauriceLambert.png",
    "default aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
    "slides": [
        {
            "type": "title",
            "icon": "../MauriceLambert.png",
            "title": "Context"
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Issue: SOC skills versus malware alerts",
            "image": "./soc.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "Many SOCs rely on L1 and L2 analysts to identify whether an antivirus detection requires analysis. These same teams often rely on L3s to identify true positives. Problems:"
                },
                {
                    "type": "ul",
                    "content": [
                        "N1 analysts lack the skills to know when to do an analysis",
                        "N3 analysts lack the skills to identify a true positive"
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Relying on Client Feedback",
            "image": "./client.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "In some SOCs, suspicious activity triggers a simple question to the client: \"Is this legitimate?\""
                },
                {
                    "type": "p",
                    "content": "Two typical - and problematic - client responses:"
                },
                {
                    "type": "ul",
                    "content": [
                        "The worried or non-technical client responds: \"I didn't do anything!\" - out of fear or confusion.",
                        "The confident or annoyed client responds: \"Yes, it's fine.\" - without actually checking."
                    ]
                },
                {
                    "type": "p",
                    "content": "The threat is detected, but either no remediation is performed, or a false positive leads to an unnecessary incident response."
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Relying on Client Feedback: Timeline",
            "image": "./timeline.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "Relying on client feedback cause a real problem in the response time. SOC take some time to react, client take some time to respond and analyst take some time to remediate. Here a current example of the timeline:"
                },
                {
                    "type": "ul",
                    "content": [
                        "04:00 PM: Malware detection",
                        "05:00 PM: Ticket opened with relay to client feedback",
                        "10:00 AM: Client feedback",
                        "11:00 AM: Analyst actions"
                    ]
                },
                {
                    "type": "p",
                    "content": "In this example, actions or remediations come 19 hours after the detection, a very long time for an incident response or a cyber attack."
                },
                {
                    "type": "p",
                    "content": "The problem is: too many malwares alerts (and false positive) to have an emergency mode (with client call for example). Ticket is very slow for communication."
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Relying on Client Feedback: Conclusion",
            "image": "./soc_panic.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "It's a really bad idea to relay malware identification on client feedback."
                },
                {
                    "type": "ul",
                    "content": [
                        "The SOC teams do it because they don't know the client's business, and it allows them to avoid any responsibility.",
                        "If clients are frightened, your SOC will become overloaded with false positives.",
                        "If clients become frustrated, the SOC will be ineffective, and they will lose confidence in you.",
                        "Your actions will be ineffective, as they are likely to take too much time."
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: Complaints and estimated losses <a href=\"https://www.ic3.gov/\">FBI ic3 AnnualReport</a>, multiples sources for % companies with SOC.",
            "title": "SOC versus cyberattacks",
            "image": "./SOC_vs_cyberattacks.png",
            "texts": [
                {
                    "type": "p",
                    "content": "<table style=\"font-family: monospace; border-collapse: collapse; width: 100%;\">\n  <thead style=\"border-bottom: 2px solid #ccc;\">\n    <tr style=\"background-color: #f0f0f033;\">\n      <th style=\"padding: 6px; border-right: 1px solid #ccc; text-align: left;\">Year</th>\n      <th style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">Complaints</th>\n      <th style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">Estimated Losses</th>\n      <th style=\"padding: 6px; text-align: right;\">% Companies with SOC</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr style=\"background-color: transparent;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2017</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">301,580</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$1.42 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">35%</td>\n    </tr>\n    <tr style=\"background-color: #ffffff0d;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2018</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">351,937</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$2.71 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">40%</td>\n    </tr>\n    <tr style=\"background-color: transparent;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2019</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">467,361</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$3.50 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">40%</td>\n    </tr>\n    <tr style=\"background-color: #ffffff0d;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2020</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">791,790</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$4.20 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">50%</td>\n    </tr>\n    <tr style=\"background-color: transparent;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2021</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">847,376</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$6.90 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">58%</td>\n    </tr>\n    <tr style=\"background-color: #ffffff0d;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2022</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">800,944</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$10.30 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">60%</td>\n    </tr>\n    <tr style=\"background-color: transparent;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2023</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">880,418</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$12.50 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">63%</td>\n    </tr>\n    <tr style=\"background-color: #ffffff0d;\">\n      <td style=\"padding: 6px; border-right: 1px solid #ccc;\">2024</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">859,532</td>\n      <td style=\"padding: 6px; border-right: 1px solid #ccc; text-align: right;\">$16.60 billion</td>\n      <td style=\"padding: 6px; text-align: right;\">65%</td>\n    </tr>\n  </tbody>\n</table>"
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Are SOCs Truly Ineffective ?",
            "image": "./analyst.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "SOCs are your best asset for rapid detection and response. Current limitations reduce their effectiveness:"
                },
                {
                    "type": "ul",
                    "content": [
                        "Skills Gap: Many SOCs suffer from a lack of qualified cybersecurity professionals.",
                        "Unreliable Detection Tools: The tools used often generate too many false positives or miss key threats.",
                        "Managed SOCs Misaligned: Managed SOCs are often designed to meet sales goals or client expectations not operational efficiency."
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Solutions",
            "image": "./soc_future.png",
            "texts": [
                {
                    "type": "p",
                    "content": "There is many solutions, cybersecurity is steadily improving, and the years ahead appear very promising."
                },
                {
                    "type": "ul",
                    "content": [
                        "Skills improvement: new schools like 2600, ENSIBS, ESNA and Oteria are training the next generation of SOC analysts.",
                        "Improved recruitment processes: system administrators will no longer be hired as SOC analysts.",
                        "Purple Teams are expected to enhance the overall effectiveness of SOCs.",
                        "The emergence of Purple Teams will drive the evolution of ineffective tools.",
                        "Technical certifications will force managed SOC leadership to adopt real cybersecurity objectives."
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Short-term alternative solutions",
            "image": "./car_upgrade.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "Imperfect alternative solutions exist to accelerate SOC improvement:"
                },
                {
                    "type": "ul",
                    "content": [
                        "GLIMPS",
                        "Automated analysis with scoring to detect suspicious executables.",
                        "AI is likely to be an effective solution for detecting suspicious executables."
                    ]
                },
                {
                    "type": "p",
                    "content": "These slides aim to introduce you to my automated solutions."
                }
            ]
        },
        {
            "type": "title",
            "icon": "../MauriceLambert.png",
            "title": "First automation: MagicStrings"
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/BinaryFileReader\">git repository</a>, <a href=\"https://mauricelambert.github.io/info/python/security/BinaryFileReader/MagicStrings.html\">code documentation</a>.",
            "title": "MagicStrings (BinaryFileReader)",
            "image": "https://mauricelambert.github.io/info/python/security/BinaryFileReader/BinaryFileReader.png",
            "texts": [
                {
                    "type": "p",
                    "content": "It's a little program to improve traditional `strings` command."
                },
                {
                    "type": "ul",
                    "content": [
                        "Search all ascii and unicode strings.",
                        "Try to decode and decrypt all strings recursively.",
                        "Identify some strings formats: IP address, URL, domain, file path, ...",
                        "Contains little rules to identify common false positives, reduce matches by searching only true positive."
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "MagicStrings (BinaryFileReader)",
            "image": "./deobfuscation.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "Using a simple command line you can identify malwares with:"
                },
                {
                    "type": "ul",
                    "content": [
                        "URL encrypted and encoded",
                        "IP address encrypted and encoded",
                        "Function names encrypted and encoded"
                    ]
                },
                {
                    "type": "p",
                    "content": "A large number of malware samples are poorly obfuscated. With this program, I found the C2 in a SharpPanda DLL in less than 3 minutes."
                }
            ]
        },
        {
            "type": "title",
            "icon": "../MauriceLambert.png",
            "title": "Second automation: ProgramExecutableAnalyzer"
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/ProgramExecutableAnalyzer/\">git repository</a>.",
            "title": "ProgramExecutableAnalyzer",
            "image": "https://mauricelambert.github.io/info/python/security/ProgramExecutableAnalyzer.png",
            "texts": [
                {
                    "type": "p",
                    "content": "This program parses a PE file and print all fields and value with description, show the entropy with a colored chart, section space in file and in memory and extract overlay. Analyst can use it for heuristic static analysis, and detect malware easily with:"
                },
                {
                    "type": "ul",
                    "content": [
                        "Encrypted payload (high entropy)",
                        "Suspicious imports",
                        "Suspicious exports",
                        "Suspicious sections",
                        "Suspicious headers",
                        "Payload in reserved/unused fields",
                        "Greater section in memory than in the file",
                        "..."
                    ]
                }
            ]
        },
        {
            "type": "title",
            "icon": "../MauriceLambert.png",
            "title": "Third automation: Win32Hooking"
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/Win32Hooking\">git repository</a>, <a href=\"https://mauricelambert.github.io/info/python/security/Win32Hooking.html\">code documentation</a>.",
            "title": "Win32Hooking",
            "image": "https://mauricelambert.github.io/info/python/security/Win32Hooking.png",
            "texts": [
                {
                    "type": "p",
                    "content": "I came up with the idea for this program while developing my PE Loader for my packer. I realized that, as in many cases, red team and blue team techniques are often the same, just used differently. By loading an executable yourself, you control its context, which means you can hook 100% of the functions it uses."
                },
                {
                    "type": "ol",
                    "content": [
                        "Load PE",
                        "Hook malware imports (IAT)",
                        "Hook DLL exports (EAT, including forwarded functions)",
                        "Hook DLL imports (IAT)",
                        "Execute entry point"
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Hack for function hook",
            "image": "./hook.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "To hook a function you may know the signature, it's not possible to know all Win32 API functions signatures, it's not possible to know malware DLL functions signatures."
                },
                {
                    "type": "p",
                    "content": "To hook all functions i define: \"by default all function have 67 pointers as arguments\". Argument use the stack, stack have limited size, so developper should not use to many arguments (when is required, it should use structure and send the pointer as argument). In Win32 API maximum number of arguments is ~13 arguments."
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Hack bug",
            "image": "./bug_hook.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "Unfortunately, this hack cause a bug, each thread has is own stack, when the first hooked function is called in the thread, the 67 arguments cause a stack overflow."
                },
                {
                    "type": "p",
                    "content": "My solution: hook the thread entry point with a shellcode to add 0x200 bytes in the stack. Now, this solution works partially, i write my own sample and i can run the thread successfully."
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Detection and Bypass",
            "image": "./bypass.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "There are many ways to detect the usage of Win32Hooking:"
                },
                {
                    "type": "ul",
                    "content": [
                        "Use 68 or more arguments cause an invalid argument value and probably a crash",
                        "Direct syscall can bypass hooks (Win32Hooking >= 2.0.0 print critical syscall actions)",
                        "Resolve function using IAT of imported modules (works for non critical functions only)",
                        "Check export function addresses (not in .text section, not in the module memory)",
                        "Sample address is not in the PEB Ldr data",
                        "In kernel process information the process executable is not the sample (it's python)",
                        "The common parent process is cmd (used by analyst to start the command)",
                        "Multiple python modules are loaded (.pyd modules)"
                    ]
                }
            ]
        },
        {
            "type": "content",
            "icon": "../MauriceLambert.png",
            "aside": "References: <a href=\"https://github.com/mauricelambert/\">Github MauriceLambert</a>, <a href=\"https://mauricelambert.github.io/\">MauriceLambert WebSite</a>.",
            "title": "Configurations and customizations",
            "image": "./complex_configuration.jpg",
            "texts": [
                {
                    "type": "p",
                    "content": "This program is fully customizable and configurable:"
                },
                {
                    "type": "ul",
                    "content": [
                        "Function pre/post hooks are configurable and customizable",
                        "Prints are configurable",
                        "Function arguments are configurable",
                        "Critical functions are configurable",
                        "Default behaviours are configurable"
                    ]
                },
                {
                    "type": "p",
                    "content": "Modifying configuration require some skills: miss configurations cause possible bypass or loss of control and bad configuration cause a crash. One good template can probably analyze all malwares."
                }
            ]
        }
    ]
}